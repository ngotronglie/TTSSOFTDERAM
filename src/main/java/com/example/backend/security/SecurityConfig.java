package com.example.backend.security;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.web.SecurityFilterChain;
import org.springframework.web.cors.CorsConfiguration;
import org.springframework.web.cors.CorsConfigurationSource;
import org.springframework.web.cors.UrlBasedCorsConfigurationSource;

import java.util.Arrays;

@Configuration
public class SecurityConfig {

    @Bean
    public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {
        http
                .cors(cors -> cors.configurationSource(corsConfigurationSource())) // C·∫•u h√¨nh CORS
                .csrf(csrf -> csrf.disable()) // V√¥ hi·ªáu h√≥a CSRF
                .authorizeHttpRequests(auth -> auth
                        .anyRequest().permitAll()  // üîì Cho ph√©p t·∫•t c·∫£ API
                )
                .formLogin(form -> form.disable())  // V√¥ hi·ªáu h√≥a form login
                .httpBasic(httpBasic -> httpBasic.disable())  // V√¥ hi·ªáu h√≥a HTTP basic authentication
                .logout(logout -> logout.permitAll());  // Cho ph√©p logout cho t·∫•t c·∫£

        return http.build();
    }

    @Bean
    public CorsConfigurationSource corsConfigurationSource() {
        CorsConfiguration corsConfig = new CorsConfiguration();

        // Ch·ªâ ƒë·ªãnh r√µ r√†ng c√°c origins c·ª• th·ªÉ
        corsConfig.setAllowedOrigins(Arrays.asList("http://localhost:9000", "http://localhost:9090")); // Cho ph√©p frontend
        corsConfig.setAllowedMethods(Arrays.asList("GET", "POST", "PUT", "DELETE", "OPTIONS"));
        corsConfig.setAllowedHeaders(Arrays.asList("*"));
        corsConfig.setAllowCredentials(true);  // Cho ph√©p credentials

        // N·∫øu b·∫°n mu·ªën s·ª≠ d·ª•ng patterns thay v√¨ origins c·ª• th·ªÉ, b·∫°n c√≥ th·ªÉ s·ª≠ d·ª•ng allowedOriginPatterns
        // V√≠ d·ª•, cho ph√©p m·ªçi origin t·ª´ localhost v·ªõi b·∫•t k·ª≥ port n√†o:
        // corsConfig.setAllowedOriginPatterns(Arrays.asList("http://localhost:*"));

        UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource();
        source.registerCorsConfiguration("/**", corsConfig);
        return source;
    }
}
